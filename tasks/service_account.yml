---

- block:
  - validate:
      schema:
        type: object
        additionalProperties:
          - command
        properties:
          account_id:
            type: string
            pattern: ^[a-z-]+$

          auth_kind:
            type: string
            enum:
              - application
              - serviceaccount
            default: application

          display_name:
            type: string

          project:
            type: string

          roles:
            type: array
            minItems: 1
            items:
              type: string
              pattern: ^[A-Za-z./-]+$

          state:
            type: string
            default: present
            enum:
              - absent
              - present

        required:
          - account_id
          - auth_kind
          - display_name
          - project
          - roles
          - state

      instance: "{{ gcp }}"
    register: gcp_validated

  - set_fact:
      gcp_v: "{{ gcp_validated.result }}"

  - name: "Get full service account email"
    set_fact:
      service_account_email: "{{ gcp_v.account_id }}@{{ gcp_v.project }}.iam.gserviceaccount.com"

  - name: "Create IAM role resources for {{ gcp_v.account_id }}"
    set_fact:
      iam_patch:
        role: "{{ item }}"
        members:
          - "{{ service_account_email }}"
    loop: "{{ gcp_v.roles }}"
    register: iam_patches_return

  - debug:
      var: iam_patches_return.results

  - debug:
      msg: "{{ iam_patches_return.results | map(attribute=ansible_facts) | list }}"

  - name: "Assemble list of IAM patch objects"
    set_fact:
      iam_patches: "{{ iam_patches_return.results | map(attribute=ansible_facts.iam_patch) | list }}"

  - name: "Deploy {{ gcp_v.account_id }}-service-account"
    gcp_deployment:
      name: "{{ gcp_v.account_id }}-service-account"
      auth_kind: "{{ gcp_v.auth_kind }}"
      config:
        resources:
          - name: "{{ gcp_v.account_id }}"
            type: iam.v1.serviceAccount
            properties:
              accountId: "{{ gcp_v.account_id }}"
              displayName: "{{ gcp_v.display_name }}"
              projectId: "{{ gcp_v.project }}"
              
          - name: "get-iam-policy-{{ gcp_v.project }}"
            action: gcp-types/cloudresourcemanager-v1:cloudresourcemanager.projects.getIamPolicy
            properties:
              resource: "{{ gcp_v.project }}"
            metadata:
              dependsOn:
                - "{{ gcp_v.account_id }}"
              runtimePolicy:
                - UPDATE_ALWAYS

          - name: "patch-iam-policy-{{ gcp_v.project }}"
            action: gcp-types/cloudresourcemanager-v1:cloudresourcemanager.projects.setIamPolicy
            properties:
              resource: "{{ gcp_v.project }}"
              policy: "$(ref.get-iam-policy-{{ gcp_v.project }})"
              gcpIamPolicyPatch:
                add: "{{ iam_patches }}"
      project: "{{ gcp_v.project }}"
      state: "{{ gcp_v.state }}"
  tags:
    - gcp_service_account
